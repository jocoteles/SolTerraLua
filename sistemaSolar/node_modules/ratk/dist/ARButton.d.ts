/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="webxr" />
export type ARButtonOptions = {
    optionalFeatures?: string[] | undefined;
    requiredFeatures?: string[] | undefined;
    onSessionStarted?: (_session: XRSession) => void;
    onSessionEnded?: (_session: XRSession) => void;
    onSupported?: () => void;
    onUnsupported?: () => void;
    onFeaturesUnsupported?: (_reason: string) => void;
    onNotAllowed?: (_exception: DOMException) => void;
    ENTER_AR_TEXT?: string;
    LEAVE_AR_TEXT?: string;
    AR_NOT_SUPPORTED_TEXT?: string;
    AR_NOT_ALLOWED_TEXT?: string;
};
export declare class ARButton {
    static convertToARButton(button: HTMLButtonElement, renderer: THREE.WebGLRenderer, options?: ARButtonOptions): void;
    static createButton(renderer: THREE.WebGLRenderer, options?: ARButtonOptions): HTMLButtonElement;
}
//# sourceMappingURL=ARButton.d.ts.map